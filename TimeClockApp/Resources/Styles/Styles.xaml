<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

	<Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource DarkRedAccent}, Dark={StaticResource White}}" />
	</Style>

	<Style TargetType="IndicatorView">
		<Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}"/>
		<Setter Property="SelectedIndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}"/>
	</Style>

	<Style TargetType="Border">
        <Setter Property="Stroke" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray500}}" />
        <Setter Property="StrokeShape" Value="RoundRectangle 10"/>
		<Setter Property="StrokeThickness" Value="2"/>
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray600}}" />
        <Setter Property="Padding" Value="6"/>
	</Style>

	<Style TargetType="BoxView">
		<Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="Button">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="CornerRadius" Value="8"/>
		<Setter Property="Padding" Value="14,10"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
                    <VisualState x:Name="PointerOver" />
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="CheckBox">
        <Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Color" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="DatePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="Transparent" />
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Editor">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray950}}" />
		<!--<Setter Property="BackgroundColor" Value="Transparent" />-->
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Entry">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray950}}" />
		<!--<Setter Property="BackgroundColor" Value="Transparent" />-->
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14" />
		<Setter Property="PlaceholderColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="ImageButton">
		<Setter Property="Opacity" Value="1" />
		<Setter Property="BorderColor" Value="Transparent"/>
		<Setter Property="BorderWidth" Value="0"/>
		<Setter Property="CornerRadius" Value="8"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="Opacity" Value="0.5" />
						</VisualState.Setters>
					</VisualState>
                    <VisualState x:Name="PointerOver" />
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Label">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
        <!--<Setter Property="BackgroundColor" Value="Transparent" />-->
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="13" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="ListView">
		<Setter Property="SeparatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray800}}" />
		<Setter Property="RefreshControlColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="Picker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray100}, Dark={StaticResource Gray950}}" />
		<!--<Setter Property="BackgroundColor" Value="Transparent" />-->
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" />
							<Setter Property="TitleColor" Value="{AppThemeBinding Light={StaticResource Gray500}, Dark={StaticResource Gray500}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="RefreshView">
		<Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray200}}" />
	</Style>

	<Style TargetType="Shadow">
		<Setter Property="Radius" Value="15" />
		<Setter Property="Opacity" Value="0.5" />
		<Setter Property="Brush" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
		<Setter Property="Offset" Value="10,10" />
	</Style>

	<Style TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray600}}" />
	</Style>

	<Style TargetType="Switch">
		<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Blue100Accent}}" />
		<Setter Property="ThumbColor" Value="{StaticResource White}" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Gray400}, Dark={StaticResource Gray500}}" />
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Gray300}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="On">
						<VisualState.Setters>
							<Setter Property="OnColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Secondary}}" />
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Off">
						<VisualState.Setters>
							<Setter Property="ThumbColor" Value="{AppThemeBinding Light={StaticResource Secondary}, Dark={StaticResource Secondary}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="TimePicker">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource White}}" />
		<!--<Setter Property="Background" Value="Transparent"/>-->
        <Setter Property="BackgroundColor" Value="Transparent"/>
		<Setter Property="FontFamily" Value="OpenSansRegular"/>
		<Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray300}, Dark={StaticResource Blue300Accent}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

	<Style TargetType="Page" ApplyToDerivedTypes="True">
		<Setter Property="Padding" Value="10"/>
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PageBackgroundLight}, Dark={StaticResource Gray800}}" />
	</Style>

	<Style TargetType="Shell" ApplyToDerivedTypes="True">
		<Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource BarBack}}" />
		<!--<Setter Property="Shell.ForegroundColor" Value="{OnPlatform WinUI={StaticResource Primary}, Default={StaticResource White}}" />-->
		<Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<Setter Property="Shell.DisabledColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray800}}" />
		<Setter Property="Shell.UnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray200}}" />
		<Setter Property="Shell.NavBarHasShadow" Value="False" />
		 <!--Bottom tab background color-->
		<Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray600}}" />
		<Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="Shell.TabBarUnselectedColor" Value="{AppThemeBinding Light={StaticResource Gray900}, Dark={StaticResource Gray400}}" />
		<Setter Property="Shell.FlyoutBackgroundColor" Value="{AppThemeBinding Light={StaticResource FlyBackgroundLight}, Dark={StaticResource FlyBackgroundDark}}" />
	</Style>

	<Style TargetType="NavigationPage">
		<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource GoldAccent}}" />
		<Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource White}}" />
		<Setter Property="IconColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource White}}" />
	</Style>

	<Style TargetType="TabbedPage">
        <!--<Setter Property="BarBackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray950}}" />-->
        <Setter Property="BarTextColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource White}}" />
		<Setter Property="UnselectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray400}}" />
		<Setter Property="SelectedTabColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray100}}" />
	</Style>

	<!--
				_________  UI STYLES __________
	-->

	<!--#region CLASS STYLES - FLYOUT -->
	<Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource FlyBackgroundLight}, Dark={StaticResource FlyBackgroundDark}}" />
		<Setter Property="Grid.RowDefinitions" Value="50" />
		<Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource FlyBackgroundLight}, Dark={StaticResource FlyBackgroundDark}}" />
							<Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource Black}, Dark={StaticResource White}}" />
						</VisualState.Setters>
					</VisualState>
					<VisualState x:Name="Selected">
						<VisualState.Setters>
							<Setter Property="BackgroundColor" Value="{StaticResource Blue100Accent}" />
							<Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="Black" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>
	
	<Style TargetType="Label" Class="FlyoutItemLabelStyle">
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="Caption" />
		<Setter Property="VerticalTextAlignment" Value="Center" />
		<Setter Property="Padding" Value="5,0,0,0" />
	</Style>

	<Style TargetType="Image" Class="FlyoutItemImageStyle">
		<Setter Property="HeightRequest" Value="26" />
		<Setter Property="WidthRequest" Value="26" />
		<Setter Property="Margin" Value="5,0" />
	</Style>
	<!--#endregion-->

	 <!--#region CLASS STYLES -->
	<Style Class="SwpieGold" TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource GoldAccent}, Dark={StaticResource GoldAccent}}" />
		<Setter Property="IconImageSource" Value="date_range_twotone.png" />
	</Style>
	<Style Class="SwpieRed" TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource FireBrickAccent}, Dark={StaticResource FireBrickAccent}}" />
		<Setter Property="IconImageSource" Value="edit_calendar.png" />
	</Style>
	<Style Class="SwpieOrange" TargetType="SwipeItem">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DarkMagentaAccent}, Dark={StaticResource DarkMagentaAccent}}" />
		<Setter Property="IconImageSource" Value="edit_calendar.png" />
	</Style>
	<!--#endregion-->
	
	<!--#region  KEY BASED STYLES -->
	<Style x:Key="BaseButton" TargetType="Button">
		<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource White}}" />
		<!--<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />-->
		<Setter Property="FontFamily" Value="OpenSansRegular" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="CornerRadius" Value="8" />
		<Setter Property="Padding" Value="14,10" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
			<VisualStateGroupList>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource Gray950}, Dark={StaticResource Gray200}}" />
							<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateGroupList>
		</Setter>
	</Style>

    <Style x:Key="ReportButton" BasedOn="{StaticResource BaseButton}" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource Primary}}" />

        <Setter Property="FontSize" Value="Small" />
        <Setter Property="Padding" Value="10,14" />
        <Setter Property="HorizontalOptions" Value="Center" />
    </Style>
    <Style x:Key="GreenButton" BasedOn="{StaticResource BaseButton}" TargetType="Button">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource DarkGreenAccent}, Dark={StaticResource DarkGreenAccent}}" />
        <Setter Property="ImageSource" Value="play_circle_big.png" />
    </Style>
    <Style x:Key="RedButton" BasedOn="{StaticResource BaseButton}" TargetType="Button">
		<Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource FireBrickAccent}, Dark={StaticResource FireBrickAccent}}" />
		<Setter Property="ImageSource" Value="pause_circle_outline_big.png" />
	</Style>

    <Style x:Key="LabelSmall" TargetType="Label">
        <Setter Property="FontSize" Value="Small" />
    </Style>
    <Style x:Key="Label_Sm_Ve" BasedOn="{StaticResource LabelSmall}" TargetType="Label">
        <Setter Property="VerticalOptions" Value="End" />
    </Style>
    <Style x:Key="LabelSmallCenter" TargetType="Label">
        <Setter Property="FontSize" Value="Small" />
        <Setter Property="VerticalTextAlignment" Value="Center" />
    </Style>
    <Style x:Key="LabelTitleName" TargetType="Label">
        <Setter Property="FontSize" Value="Large" />
        <Setter Property="FontAttributes" Value="Bold" />
    </Style>
    <Style x:Key="LabelMicro_Hstart" TargetType="Label">
        <Setter Property="FontSize" Value="Small" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
    </Style>
    <Style x:Key="LabelReportButton" BasedOn="{StaticResource LabelSmall}" TargetType="Label">
        <Setter Property="HorizontalOptions" Value="Center" />
    </Style>
    <Style x:Key="LabelMicro" TargetType="Label">
        <Setter Property="FontSize" Value="Micro" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>
    <Style x:Key="LabelPad" BasedOn="{StaticResource LabelSmall}" TargetType="Label">
        <Setter Property="Padding" Value="5,0" />
    </Style>
    <Style x:Key="LabelPadCenter" BasedOn="{StaticResource LabelSmallCenter}" TargetType="Label">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>
    <Style x:Key="LabelPad_HStart" BasedOn="{StaticResource LabelSmallCenter}" TargetType="Label">
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="HorizontalTextAlignment" Value="Start" />
    </Style>

    <Style x:Key="WarnFrame" TargetType="Border">
        <Setter Property="Stroke" Value="{StaticResource OrangeRedAccent}" />
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource White}, Dark={StaticResource Gray600}}" />
    </Style>

    <!--#endregion-->

</ResourceDictionary>